# Copyright: (c) 2022, dbi services, distributed without any warranty under the terms of the GNU General Public License v3
---
- name: Set password for Windows Admin account
  no_log: true
  set_fact:
    os_admin_password: "{{ lookup('password', '/dev/null length=32 chars=ascii_letters,digits') }}"

- name: Call role the generate the winrm_script for user_data
  include_role:
    name: yak.core.winrm
  vars:
    script_type: aws
    winrm_user: "{{ os_admin_username }}"
    winrm_user_password: "{{ os_admin_password }}"

- name: Derive network configuration
  block:

    - delegate_to: localhost
      set_fact:
        instance_network:
          private_ip_address: "{{ private_ip.ip }}"
          assign_public_ip: true
      when: private_ip.mode == 'manual' and public_ip.mode == 'auto'

    - delegate_to: localhost
      set_fact:
        instance_network:
          private_ip_address: "{{ private_ip.ip }}"
          assign_public_ip: false
      when: private_ip.mode == 'manual' and ( public_ip.mode == 'manual' or public_ip.mode == 'none')

    - delegate_to: localhost
      set_fact:
        instance_network:
          assign_public_ip: true
      when: private_ip.mode == 'auto' and public_ip.mode == 'auto'

    - delegate_to: localhost
      set_fact:
        instance_network:
          assign_public_ip: false
      when: private_ip.mode == 'auto' and ( public_ip.mode == 'manual' or public_ip.mode == 'none')

- debug: var=instance_options
  delegate_to: localhost
  when: debug | bool

- name: Add AWS instance
  delegate_to: localhost
  amazon.aws.ec2_instance:
    region: "{{ region_id }}"
    key_name: "{{ ec2_key_name }}"
    instance_type: "{{ instance_type }}"
    image:
      id: "{{ image_id }}"
    wait: yes
    volumes: "{{ volumes_params }}"
    security_group: "{{ security_group_id }}"
    vpc_subnet_id: "{{ subnet_id }}"
    network: "{{ instance_network }}"
    tags:
      Name: "{{ server_name }}"
    user_data: "{{ winrm_script }}"
  register: r_aws

- debug: var=r_aws
  delegate_to: localhost
  when: debug | bool

- name: Set network interface name
  delegate_to: localhost
  amazon.aws.ec2_eni:
    region: "{{ region_id }}"
    eni_id: "{{ r_aws.instances[0].network_interfaces[0].network_interface_id }}"
    name: "{{ server_name }}-eni"
    description: "ENI deployed from YaK for instance {{ server_name }}"
    state: present

- name: Associate manually the EIP to the instance
  delegate_to: localhost
  community.aws.ec2_eip:
    region: "{{ region_id }}"
    device_id: "{{ r_aws.instances[0].instance_id }}"
    ip: "{{ public_ip.ip }}"
    tags:
        Name: "{{ server_name }}"
  when: public_ip.mode == 'manual'

- name: Define return
  delegate_to: localhost
  set_fact:
    returned:
      instance: "{{ r_aws.instances[0] }}"
      os_admin_username: "{{ os_admin_username }}"
      os_admin_password: "{{ os_admin_password }}"

