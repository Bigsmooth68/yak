# Copyright: (c) 2022, dbi services, distributed without any warranty under the terms of the GNU General Public License v3
---
- name: Set Instance options
  delegate_to: localhost
  set_fact:
    instance_options:
      region: "{{ region_id }}"
      key_name: "{{ ec2_key_name }}"
      instance_type: "{{ instance_type }}"
      image:
        id: "{{ image_id }}"
      wait: yes
      volumes: "{{ volumes_params }}"
      security_group: "{{ security_group_id }}"
      vpc_subnet_id: "{{ subnet_id }}"
      tags:
        Name: "{{ server_name }}"

- name: Derive network configuration
  block:

    - delegate_to: localhost
      set_fact:
        instance_options: "{{ instance_options | combine ({ 'network': { 'private_ip_address': private_ip.ip, 'assign_public_ip': true } }) }}"
      when: private_ip.mode == 'manual' and public_ip.mode == 'auto'

    - delegate_to: localhost
      set_fact:
        instance_options: "{{ instance_options | combine ({ 'network': { 'private_ip_address': private_ip.ip, 'assign_public_ip': false } }) }}"
      when: private_ip.mode == 'manual' and ( public_ip.mode == 'manual' or public_ip.mode == 'none')

    - delegate_to: localhost
      set_fact:
        instance_options: "{{ instance_options | combine ({ 'network': { 'assign_public_ip': true } }) }}"
      when: private_ip.mode == 'auto' and public_ip.mode == 'auto'

    - delegate_to: localhost
      set_fact:
        instance_options: "{{ instance_options | combine ({ 'network': {'assign_public_ip': false } }) }}"
      when: private_ip.mode == 'auto' and ( public_ip.mode == 'manual' or public_ip.mode == 'none')

- debug: var=instance_options
  delegate_to: localhost
  when: debug | bool

- name: Add AWS instance
  delegate_to: localhost
  amazon.aws.ec2_instance: "{{ instance_options }}"
  register: r_aws

- debug: var=r_aws
  delegate_to: localhost
  when: debug | bool

- name: Set network interface name
  delegate_to: localhost
  amazon.aws.ec2_eni:
    region: "{{ region_id }}"
    eni_id: "{{ r_aws.instances[0].network_interfaces[0].network_interface_id }}"
    name: "{{ server_name }}-eni"
    description: "ENI deployed from YaK for instance {{ server_name }}"
    state: present

- name: Associate manually the EIP to the instance
  delegate_to: localhost
  community.aws.ec2_eip:
    region: "{{ region_id }}"
    device_id: "{{ r_aws.instances[0].instance_id }}"
    ip: "{{ public_ip.ip }}"
    tags:
        Name: "{{ server_name }}"
  when: public_ip.mode == 'manual'

