# Copyright: (c) 2022, dbi services, distributed without any warranty under the terms of the GNU General Public License v3
---
- include_tasks: derive_volumes_need.yml

- name: Get the list of existing instances
  delegate_to: localhost
  community.aws.ec2_instance_info:
    region: "{{ region_id }}"
    filters:
      "tag:Name": "{{ vm_name }}"
      instance-state-name: [ "pending", "running", "shutting-down", "stopping", "stopped" ]
  register: r_ec2_instance_info
  failed_when: r_ec2_instance_info.instances|length != 1

- debug: var=r_ec2_instance_info
  delegate_to: localhost
  when: debug | bool

- set_fact:
    test: "/dev/sd{{ allowed_device_alphabet_letter[1-1:1] }}"

- name: Create and attach the volumes to instance
  delegate_to: localhost
  amazon.aws.ec2_vol:
    region: "{{ region_id }}"
    instance: "{{ r_ec2_instance_info.instances[0].instance_id }}"
    volume_size: "{{ storage_devices.max_size_gb|int }}"
    volume_type: "{{ storage_devices.specifications.volume_type }}"
    device_name: "/dev/sd{{ allowed_device_alphabet_letter[item|int-1:item|int] }}"
    delete_on_termination: yes
    tags: "{{ {'Name': 'disk'+item} | combine(custom_tags) }}"
  register: r_aws_vol
  loop: "{{ query('sequence', 'start=1 end='+(number_of_devices)|string) }}"
